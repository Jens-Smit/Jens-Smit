{% extends 'base.html.twig' %}

{% block title %}Vertrag bearbeiten{% endblock %}
{% block stylesheet %}
{{ parent() }}
<style>
span{
    boder: 1px solid red; 
    
}
</style>
{% endblock %}
{% block body %} 
    <h1>Vertrag bearbeiten</h1>

    {{ form_start(form) }}
        {{ form_widget(form.titel) }}
        {{ form_widget(form.discription) }}
        {{ form_widget(form.objekt) }}
        
            <button type="button" class="btn btn-primary w-100 " data-toggle="modal" data-target="#varModal">
                Variablen einf체gen
            </button>
        
        {{ form_widget(form.text) }}
        <div class="form-group">
    
        <button type="submit" class="btn btn-lg w-100 btn-success">Speichern</button>
        </div>
    {{ form_end(form) }}
     <!-- Modal -->
    <div class="modal fade" id="varModal" tabindex="-1" role="dialog" aria-labelledby="varModalLabel" aria-hidden="true">
     <div class="modal-dialog" role="document">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="varModalLabel">Variablen einf체gen</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <p>Klicken Sie auf eine Variable, um sie in den Vertragstext einzuf체gen:</p>
            
            {% for variable in variablen %}
                 <a href="#" class="variable btn btn-sm infoSecunder" onclick="addVariable('{{variable.var}}')">{{variable.name}}</a>
             {% endfor %}
        </div>
        <div class="modal-footer">
            
        </div>
        </div>
        </div>
    </div>




{% endblock %}
{% block javascripts %}
{{  parent() }}
<script>
function setCaretPosition(element, position) {
  if (element && (element.setSelectionRange || element.createTextRange)) {  // Check for method existence
    // Supported element type
    if (element.nodeType === 1 && (element.type === 'text' || element.type === 'password' || element.type === 'search' || element.type === 'tel' || element.type === 'url')) {
      if (element.setSelectionRange) {
        element.focus();  // Ensure element is focused
        element.setSelectionRange(position, position);
      } else {
        var range = element.createTextRange();  // For older IE compatibility
        range.collapse(true);
        range.moveEnd('character', position);
        range.moveStart('character', position);
        range.select();
      }
    } else {
      console.error('setSelectionRange not supported for this element type');
    }
  } else {
    console.error('Element not found or does not support setSelectionRange');
  }
}
$(document).ready(function() {
    
    
setTimeout(function() {
    let variables =  $('#cke_1_contents iframe').contents().find('body span');
    if (!variables.hasClass('variable')) {
        variables.toggleClass('variable');
    } const neuesKind = $('<style>').text('.variable{background:yellow !important;user-select:none;padding: 3px;border-radius: 5px;border: 1px solid black}');
     $('#cke_1_contents iframe').contents().find('body').prepend(neuesKind);
    //console.log($('#cke_1_contents iframe').contents().find('body span'));
    variables.each(function(){
       
       $(this).on('click', function(event) {
        const nextElement = $(this).parent();
        setCaretPosition(nextElement, 3); // Move caret to position 5    
            
            
       


       
        
        console.log(nextElement);
            // Fokus auf das n채chste Element verschieben
             
           
        });
    });
    
     
}, 100);
     
});




        function addVariable(variable){
                       
                        
                        
                        let string =  ' <span style="background:red;" >'+variable+'</span>&nbsp;'
                        
                       // CKEDITOR.instances.form_text.insertText(string);
                        let editor = CKEDITOR.instances.form_text;
                        let content = editor.getData();
                        let lastIndex = content.lastIndexOf("</p>");
                        if (lastIndex !== -1) {
                         content = content.substring(0, lastIndex);
                        }
                        content = content+string;
                        editor.setData(content);

                        
                        //formatieren der variable im text
                        
                        $('#cke_1_contents iframe').on('load', function() {
                            let variables =  $(this).contents().find('body span');
                            if (!variables.hasClass('variable')) {
                                variables.toggleClass('variable');
                            } const neuesKind = $('<style>').text('.variable{background:yellow !important;padding: 3px;border-radius: 5px;border: 1px solid black}');
                           
                            $(this).contents().find('body').prepend(neuesKind);
                            console.log(variables);
                        });

                        $('#varModal').modal('hide');
        }
  
</script>
{% endblock %}